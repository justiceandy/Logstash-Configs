input {
  udp {
   port => 8080
   codec => "json"
  }
}
filter {
  # Add Json Fields to Message Source
  json {
    source => "message"
  }
  # Parse cookies into individual fields
  kv {
    source => "cookies"
    field_split => ";"
    trimkey => "+_ "
    add_field => {
      "cookie" => "parsed"
    }
  }
  # Add Geo IP Lookup Data
  geoip {
    source => "ip"
    fields => ["city_name","continent_code","country_code2","country_code3","country_name","dma_code","ip","latitude","longitude","postal_code","region_name","timezone"]
    add_field => {
      geoTracking => "true"
      geopoint => "%{[geoip][latitude]},%{[geoip][longitude]}"
    }
  }
  #Parse User Agent
  useragent {
   source => "userAgent"
   target => "ua"
  }
  # Parse Google Analytics utmz array into seperate fileds
  if [utmz] {
   grok {
     match => {"utmz" => "%{INT:gaDomain}\.%{INT:gaCookieSetTime}\.%{INT:gaSessionNumber}\.%{INT:gaCampaign}\.utmcsr=%{DATA:gaCampaignSource}\|utmccn=%{NOTSPACE:gaCampaignName}\|utmcmd=%{NOTSPACE:gaCampaignMedium}"}
     tag_on_failure => ['utmzfail']
   }
  }
  #  Parse Google Analytics utma Cookie
  if [utma] {
    grok {
      match => {"utma" => "%{INT}\.%{INT:gaUniqueID}\.%{INT:gaFirstVisit}\.%{INT:gaLastVisit}\.%{INT:gaCurrentVisitStart}\.%{INT:gaVisitCount}"}
      tag_on_failure => ['utmaFail']
    }
  }
  # Parse Variables from Landing Page URL
  if [lp] {
    grok {
      match => {"lp" => "%{WORD:lpProtocol}://%{NOTSPACE:lpSite}/%{NOTSPACE:lpType}/%{NOTSPACE:lpTypeRequest}"}
      tag_on_failure => ['lpFail']
    }
    # Parse placement
    grok {
     match => {"adposition" => "%{INT:adDisplayPage}%{NOTSPACE:adPageLocation}%{INT:adDisplay}"}
     tag_on_failure => ['lpPosFail']
    }
    # Parse Device
    grok {
     match => {"deviceModel" => ",%{NOTSPACE:adDevice}"}
     tag_on_failure => ['lpDeviceFail']
    }
  }
  # Parse Google Analytics utmb cookie
  if [utmb] {
    grok {
      match => {"utmb" => "%{INT}\.%{INT:gaVisitPageViews}\.%{INT:gaUTMB}\.%{INT:gaVisitTimestamp}"}
      tag_on_failure => ['utmbFail']
    }
  }
  #Remove Headers, Source Data, and Message Field"
  mutate {
    remove_field => ["headers","_source","message"]
  }
}
output {
  amazon_es {
    hosts => ["AWS-ES-INSTANCE-URL"]
    region => "AWS-REGION"
    aws_access_key_id => 'AWS-ACCESS-KEY'
    aws_secret_access_key => 'AWS-SECRET-ACCESS-KEY'
    index => "events-%{+YYYY.MM.dd}"
  }
}
