input {
 file {
   type => "access"
   path => "C:\www\nginx-1.9.0\logs\access.log"
   start_position => "beginning"
 }
 file {
   type => "error"
   path => "C:\www\nginx-1.9.0\logs\error.log"
   start_position => "beginning"
 }
}
filter {
  if [type] == "error" {
    grok {
     match => {"message" => "%{DATA} %{WORD:webserver} %{HOST:myhost}\-%{WORD:class}\: (?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request})?(?:, host: %{QS:host})?(?:, referrer: \"%{URI:referrer})"}
     add_field => {
      "file" => "error.log"
      "received_at" => "%{@timestamp}"
      "server" => "%{host}"
     }
    }
  }
  if [type] == "access" {
    grok {
     patterns_dir => "./patterns"
     match => { "message" => "${NGINXACCESS}" }
     add_field => {
      "file" => "access.log"
      "received_at" => "%{@timestamp}"
      "server" => "%{host}"
     }
    }
  }
}
output {
  amazon_es {
    hosts => ["AWS-ES-INSTANCE-URL"]
    region => "AWS-REGION"
    aws_access_key_id => 'AWS-ACCESS-KEY'
    aws_secret_access_key => 'AWS-SECRET-ACCESS-KEY'
    index => "mongo-%{+YYYY.MM.dd}"
  }
}
